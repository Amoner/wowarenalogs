import { from } from 'rxjs';

import { stringToLogLine } from '../src/pipeline/common/stringToLogLine';

describe('pipeline component tests', () => {
  it('should parse COMBATANT_INFO with weird talent data', () => {
    // See: [,(102378,126441,1) section
    // array of talents has some weird first entry that is an empty object and prints as an empty string :\
    const log =
      '9/27/2024 21:15:17.791-8  COMBATANT_INFO,Player-57-0D7FB856,0,12056,58463,330404,16207,0,0,0,2072,2072,2072,0,0,4825,4825,4825,0,8729,18376,18376,18376,36664,253,[,(102378,126441,1),(94987,117584,1),(94957,117554,1),(94959,123779,1),(94960,117557,1),(94961,117558,1),(94968,117565,1),(94974,117571,1),(94982,117579,1),(94983,117580,1),(94986,117583,1),(94993,117590,1),(99832,123348,1),(102292,126352,1),(102336,126397,1),(102337,126398,1),(102339,126400,1),(102340,126402,1),(102343,126405,1),(102344,126406,1),(102345,126407,1),(102346,126408,1),(102347,126409,1),(102348,126410,2),(102349,126411,1),(102351,126413,1),(102352,126414,1),(102353,126415,1),(102354,126416,1),(102357,126419,1),(102358,126420,1),(102360,126422,1),(102361,126423,1),(102364,126426,2),(102365,126427,1),(102367,126430,2),(102368,126431,1),(102369,126432,1),(102373,126436,1),(102376,126439,1),(102377,126440,1),(102380,126443,1),(102381,126444,1),(102386,126449,1),(102387,126450,1),(102388,126451,1),(102390,126453,1),(102391,126454,1),(102393,126457,1),(102395,126459,1),(102396,126460,2),(102397,126461,1),(102401,126465,1),(102403,126467,1),(102404,126468,1),(102405,126469,1),(102406,126470,1),(102407,126471,1),(102408,126472,1),(102409,126473,1),(102410,126474,1),(102411,126475,1),(102414,126478,1),(102415,126480,1),(102416,126481,1),(102417,126482,1),(102418,126483,1),(102421,126486,1),(102422,126488,1),(102739,126830,1)],(0,202746,356719,203340),[(212020,639,(),(11086,10273,10837,10832,11087,10371,1498,10876),()),(218431,626,(),(10289,11084,10837,10832,1485),()),(218380,626,(),(10289,11084,1485),()),(0,0,(),(),()),(217135,639,(),(11318,9626,10842,10520,8960,8794),()),(218415,626,(),(10289,11084,10837,10832,1485),()),(218407,626,(),(10289,11084,1485),()),(217134,639,(),(11318,9625,10842,10520,8960,8794),()),(223838,636,(),(10278,11141,10377,10837,10832,3172,10255),()),(218369,626,(),(10289,11084,1485),()),(218428,626,(),(10289,11084,10837,10832,1485),()),(218427,626,(),(10289,11084,10837,10832,1485),()),(218422,626,(),(10289,11084,1485),()),(218421,626,(),(10289,11084,1485),()),(223842,636,(),(10278,11141,10377,3172,10255),()),(218446,626,(),(10289,11084,1485),()),(0,0,(),(),()),(5976,1,(),(),())],[Player-86-0A3DB8BD,21562,Player-57-0D702BDD,1126],125,38,1204,209';
    let logLine = null;
    from([log])
      .pipe(stringToLogLine('America/New_York'))
      .forEach((line) => (logLine = line));

    expect(logLine).not.toBeNull();
  });
});
